[0m[1mdata.aws_vpc.safal-vpc: Reading...[0m[0m
[0m[1mdata.aws_subnet.safal-subnet: Reading...[0m[0m
[0m[1mdata.aws_subnet.safal-subnet: Read complete after 1s [id=subnet-0fdfb5252ab10392f][0m
[0m[1mdata.aws_vpc.safal-vpc: Read complete after 3s [id=vpc-0eb2d01c37cc93e40][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_iam_instance_profile.ec2_profile[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "ec2_profile" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "safal-ec2-profile"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "safal-ec2-s3-role"
      [32m+[0m[0m tags        = {
          [32m+[0m[0m "Creator" = "Safal Karki"
          [32m+[0m[0m "Name"    = "safal-ec2-profile"
        }
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "Creator" = "Safal Karki"
          [32m+[0m[0m "Name"    = "safal-ec2-profile"
        }
      [32m+[0m[0m unique_id   = (known after apply)
    }

[1m  # aws_iam_role.ec2_s3_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ec2_s3_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "safal-ec2-s3-role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "Creator" = "Safal Karki"
          [32m+[0m[0m "Name"    = "safal-ec2-s3-role"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Creator" = "Safal Karki"
          [32m+[0m[0m "Name"    = "safal-ec2-s3-role"
        }
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # aws_instance.myinstance[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "myinstance" {
      [32m+[0m[0m ami                                  = "ami-05ffe3c48a9991133"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m enable_primary_ipv6                  = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "safal-ec2-profile"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "safal-encryption-key"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m region                               = "us-east-1"
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = "subnet-0fdfb5252ab10392f"
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Creator" = "Safal Karki"
          [32m+[0m[0m "Name"    = "safal-EC2"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Creator" = "Safal Karki"
          [32m+[0m[0m "Name"    = "safal-EC2"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)

      [32m+[0m[0m capacity_reservation_specification (known after apply)

      [32m+[0m[0m cpu_options (known after apply)

      [32m+[0m[0m ebs_block_device (known after apply)

      [32m+[0m[0m enclave_options (known after apply)

      [32m+[0m[0m ephemeral_block_device (known after apply)

      [32m+[0m[0m instance_market_options (known after apply)

      [32m+[0m[0m maintenance_options (known after apply)

      [32m+[0m[0m metadata_options (known after apply)

      [32m+[0m[0m network_interface (known after apply)

      [32m+[0m[0m private_dns_name_options (known after apply)

      [32m+[0m[0m root_block_device (known after apply)
    }

[1m  # aws_s3_bucket.mybucket[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "mybucket" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "com.safal-lf-bucket"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_region               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = true
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = "us-east-1"
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "Creator" = "Safal Karki"
          [32m+[0m[0m "Name"    = "safal--tf-bucket"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "Creator" = "Safal Karki"
          [32m+[0m[0m "Name"    = "safal--tf-bucket"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule (known after apply)

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration (known after apply)

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # aws_s3_bucket_versioning.versioning_safal[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "versioning_safal" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m region = "us-east-1"

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1m  # aws_security_group.secgrp[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "secgrp" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "secgrp_for_ec2"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "my_secgrp"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Creator" = "Safal Karki"
          [32m+[0m[0m "Name"    = "safal--secgrp"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Creator" = "Safal Karki"
          [32m+[0m[0m "Name"    = "safal--secgrp"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0eb2d01c37cc93e40"
    }

[1m  # aws_vpc_security_group_egress_rule.allow_all_egress[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_egress_rule" "allow_all_egress" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "-1"
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
    }

[1m  # aws_vpc_security_group_ingress_rule.allow_icmp[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "allow_icmp" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = -1
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "icmp"
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = -1
    }

[1m  # aws_vpc_security_group_ingress_rule.rule_for_web[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "rule_for_web" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 80
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 80
    }

[1m  # aws_vpc_security_group_ingress_rule.ssh_rule[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "ssh_rule" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 22
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m region                 = "us-east-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags_all               = {}
      [32m+[0m[0m to_port                = 22
    }

[1mPlan:[0m 10 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m ec2_arn      = (known after apply)
  [32m+[0m[0m ec2_role_arn = (known after apply)
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
